# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
#
#
# This Pipeline will:
#   1. build images with $CI_COMMIT_SHORT_SHA as tag.
#   2. Start images as service and run a few tests against them.
#   3. if a tag is pushed:
#        Push the image with $CI_COMMIT_TAG and latest as tag.
#
# If it fails, we let the registry garbage collector cleanup the $CI_COMMIT_SHORT_SHA images


stages:
  - unittest
  - build
  - build-tag
  - functional-tests

variables:
  UNICORE_TSI_VERSION: "8.2.1-ljupyter-1.3"
  TUNNEL_SECRET_KEY: $TUNNEL_SECRET_KEY
  TUNNEL_SUPERUSER_PASS: $TUNNEL_SUPERUSER_PASS
  TUNNELSERVICE_SSH_REMOTE_PRIVATE_KEY: $TUNNELSERVICE_SSH_REMOTE_PRIVATE_KEY
  TUNNELSERVICE_SSH_TUNNEL_PRIVATE_KEY: $TUNNELSERVICE_SSH_TUNNEL_PRIVATE_KEY
  K8S_TEST_CLUSTER_CA_AUTH_DATA: $K8S_TEST_CLUSTER_CA_AUTH_DATA
  K8S_TEST_CLUSTER_USER_TOKEN: $K8S_TEST_CLUSTER_USER_TOKEN
  K8S_TEST_CLUSTER_SERVER: $K8S_TEST_CLUSTER_SERVER

unittest:
  when: manual
  stage: unittest
  timeout: 20 minutes
  services:
    - name: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/unicore-test-server/unicore-tsi-slurm:${UNICORE_TSI_VERSION}
      alias: unicore-test-tsi
  image:
    name: python:alpine3.14
  before_script:
    - apk add gcc build-base linux-headers openssh
    - pip3 install -r ${CI_PROJECT_DIR}/build-requirements.txt
  script:
    - COUNTER=15; until [ $COUNTER -eq 0 ]; do LINES=$(netstat -ltnp 2>/dev/null | tr -s ' ' | grep ":4433" | wc -l || true); if [[ $LINES -eq 1 ]]; then break; else echo "UNICORE TSI not running yet"; sleep 10; let COUNTER-=1; fi; done; if [[ $COUNTER -eq 0 ]]; then echo "TSI GateWay not reachable. Exit"; exit 1; fi
    - echo "Give UNICORE-TSI time to fully start"; sleep 10
    - set -a; source ${CI_PROJECT_DIR}/tests/config/cicd/.envs ; set +a
    - mkdir -p /tmp/keys && mkdir -p /tmp/ssh_socket && echo "$TUNNELSERVICE_SSH_TUNNEL_PRIVATE_KEY" >> /tmp/keys/tunnel && echo "$TUNNELSERVICE_SSH_REMOTE_PRIVATE_KEY" >> /tmp/keys/remote && chmod 400 /tmp/keys/tunnel && chmod 400 /tmp/keys/remote
    - pytest -c ${CI_PROJECT_DIR}/tests/logs_tests/pytest.ini
    - pytest -c ${CI_PROJECT_DIR}/tests/tunnel_tests/pytest.ini

kaniko-build:
  when: manual
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}

functional-tests-in-k8s:
  stage: functional-tests
  image: 
    name: python:3.9.9-slim
    entrypoint: [""]
  # Optional: Manual gate
  when: manual
  before_script:
    - pip install -r ${CI_PROJECT_DIR}/tests/functional_tests/requirements.txt
    - export CA_AUTH_PATH="/tmp/k8s_ca.crt"
    - echo -n "${K8S_TEST_CLUSTER_CA_AUTH_DATA}" | base64 -d > ${CA_AUTH_PATH}
  script:
    - export CI_COMMIT_SHORT_SHA=02371c4c
    - pytest -c ${CI_PROJECT_DIR}/tests/functional_tests/pytest.ini

kaniko-build-tag:
  stage: build-tag
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  rules:
    - if: $CI_COMMIT_TAG
